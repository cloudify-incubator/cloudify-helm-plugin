plugins:
  helm:
    executor: central_deployment_agent
    package_name: cloudify-helm-plugin
    package_version: 0.4.5
dsl_definitions:
  helm_configuration:
    helm_config: &id001
      type: cloudify.types.helm.HelmConfig
  use_external_resource_desc: >
    Indicate whether the resource exists or if Cloudify should create the resource, true if you are bringing an existing resource, false if you want cloudify to create it.
  external_resource:
    use_external_resource: &id002
      type: boolean
      default: false
data_types:
  cloudify.types.helm.HelmConfig:
    properties:
      executable_path:
        type: string
        default: ''
        required: false
  cloudify.types.helm.ConfigurationVariant:
    description: >
      Type representing all Kubernetes API configuration variants. Each property represents separate supported variant of configuration. For now, until Helm support "--insecure" one of "blueprint_file_name", "manager_file_path" and "file_content" must be used. "api_key" inputs will override kubeconfig data.
    properties:
      blueprint_file_name:
        type: string
        required: false
      manager_file_path:
        type: string
        required: false
      file_content:
        required: false
      api_options:
        type: cloudify.types.helm.ApiOptions
        required: false
  cloudify.types.helm.ApiOptions:
    properties:
      host:
        type: string
        required: false
      api_key:
        type: string
        required: false
      ssl_ca_cert:
        type: string
        required: false
  cloudify.types.helm.AuthenticationVariant:
    description: >
      Type representing all authentication variants. for different Kubernetes cloud providers. Each property represents separate supported variant of authentication. You should choose one variant and fill in only on property.
    properties:
      gcp_service_account:
        type: string
        required: false
      aws_access_key_id:
        type: string
        required: false
      aws_secret_access_key:
        type: string
        required: false
      aws_default_region:
        type: string
        required: false
  cloudify.types.helm.ClientConfig:
    description: >
      Configuration properties for Helm to interact with kubernetes cluster. if kube_config file not provided then kube_token and kube_api_server should provided.
    properties:
      configuration:
        type: cloudify.types.helm.ConfigurationVariant
      authentication:
        type: cloudify.types.helm.AuthenticationVariant
        required: false
  cloudify.types.helm.ReleaseConfig:
    description: >
      configuration properties for release node type.
    properties:
      name:
        type: string
        required: true
      chart:
        type: string
        required: true
      values_file:
        type: string
        required: false
      set_values:
        default: &id004 []
      flags:
        default: []
  cloudify.types.helm.RepoConfig:
    description: >
      configuration properties for repo node type.
    properties:
      name:
        type: string
        required: true
      repo_url:
        type: string
        required: true
      flags:
        default: []
node_types:
  cloudify.nodes.helm.Binary:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      helm_config: *id001
      use_existing_resource:
        type: boolean
        default: false
      installation_source:
        type: string
        default: https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz
      max_sleep_time:
        type: integer
        default: 300
    interfaces:
      cloudify.interfaces.validation:
        check_status:
          implementation: helm.cloudify_helm.tasks.check_status_binary
        check_drift:
          implementation: helm.cloudify_helm.tasks.check_status_binary
      cloudify.interfaces.lifecycle:
        create:
          implementation: helm.cloudify_helm.tasks.install_binary
        poststart:
          implementation: helm.cloudify_helm.tasks.check_status_binary
        delete:
          implementation: helm.cloudify_helm.tasks.uninstall_binary
  cloudify.nodes.helm.Release:
    derived_from: cloudify.nodes.Root
    properties:
      helm_config: *id001
      use_external_resource: *id002
      client_config:
        type: cloudify.types.helm.ClientConfig
        required: true
      resource_config:
        type: cloudify.types.helm.ReleaseConfig
        required: true
      max_sleep_time:
        type: integer
        default: 900
    interfaces:
      cloudify.interfaces.validation:
        check_status:
          implementation: helm.cloudify_helm.tasks.check_release_status
        check_drift:
          implementation: helm.cloudify_helm.tasks.check_release_drift
      cloudify.interfaces.lifecycle:
        start:
          implementation: helm.cloudify_helm.tasks.install_release
          inputs:
            flags:
              default: &id003 []
        poststart:
          implementation: helm.cloudify_helm.tasks.check_release_status
        delete:
          implementation: helm.cloudify_helm.tasks.uninstall_release
          inputs:
            flags:
              default: *id003
        check_drift:
          implementation: helm.cloudify_helm.tasks.check_release_drift
      helm:
        upgrade_release:
          implementation: helm.cloudify_helm.tasks.upgrade_release
          inputs:
            chart:
              default: ''
            flags:
              default: *id003
            set_values:
              default: *id004
            values_file:
              type: string
              default: ''
  cloudify.nodes.helm.Repo:
    derived_from: cloudify.nodes.Root
    properties:
      helm_config: *id001
      use_external_resource: *id002
      resource_config:
        type: cloudify.types.helm.RepoConfig
        required: true
      max_sleep_time:
        type: integer
        default: 300
    interfaces:
      cloudify.interfaces.validation:
        check_status:
          implementation: helm.cloudify_helm.tasks.repo_list
        check_drift:
          implementation: helm.cloudify_helm.tasks.repo_list
      cloudify.interfaces.lifecycle:
        start:
          implementation: helm.cloudify_helm.tasks.add_repo
          inputs:
            flags:
              default: []
        delete:
          implementation: helm.cloudify_helm.tasks.remove_repo
          inputs:
            flags:
              default: *id003
        check_drift:
          implementation: helm.cloudify_helm.tasks.repo_check_drift
      helm:
        update_repo:
          implementation: helm.cloudify_helm.tasks.update_repo
          inputs:
            flags:
              default: *id003
relationships:
  cloudify.helm.relationships.run_on_host:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: helm.cloudify_helm.tasks.inject_env_properties
  cloudify.relationships.helm.connected_to_shared_cluster:
    derived_from: cloudify.relationships.connected_to
workflows:
  update_repositories:
    mapping: helm.cloudify_helm.workflows.update_repositories
    parameters:
      node_instance_id:
        type: string
      flags:
        default: *id003
  upgrade_release:
    mapping: helm.cloudify_helm.workflows.upgrade_release
    parameters:
      node_instance_id:
        type: string
      chart:
        required: true
        default: ''
      flags:
        default: *id003
      set_values:
        default: *id004
      values_file:
        type: string
        default: ''
blueprint_labels:
  obj-type:
    values:
      - helm
labels:
  obj-type:
    values:
      - helm
