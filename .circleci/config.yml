version: 2.1

job-post-steps: &job-post-steps
  post-steps:
   - slack/notify_failed

unittest-post-steps: &unittest-post-steps
  post-steps:
    - store_test_results:
        path: /home/circleci/project/nosetests.xml
    - store_artifacts:
        path: /home/circleci/project/coverage.xml
        prefix: tests
    - slack/notify_failed

orbs:
  node: cloudify/public-unittest-orb@volatile
  wagonorb: cloudify/wagon-bulder-orb@volatile
  releaseorb: cloudify/release-orb@volatile
  slack: cloudify/notify-slack@2

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

executors:
  py36:
    docker:
      - image: circleci/python:3.6

  cloudify-machine-py3:
    machine:
      image: ubuntu-2004:202201-02
      resource_class: large


commands:

  setup_manager:
    steps:
      - run: |
          if [[ -z "${CLOUDIFY_HOST}" ]]; then
              exit 1
          fi
      - run: |
          if [[ -z "${CLOUDIFY_TENANT}" ]] && [ -z "${CIRCLE_PROJECT_REPONAME}" ]; then
              exit 1
          fi
      - run: |
          if [[ -z "${CLOUDIFY_TOKEN}" ]]; then
              exit 1
          fi
      - run: |
          response=$(curl --write-out '%{http_code}' --silent --insecure --header "Tenant: ${CLOUDIFY_TENANT}" --header "Authentication-Token: ${CLOUDIFY_TOKEN}" https://$CLOUDIFY_HOST/api/v3.1/status --output /dev/null)
          if [[ $response != 200 ]]; then
              echo "Failed to get manager status";
              exit 1
          fi
      - run: pip3 install urllib3==1.26.15 requests-toolbelt==0.10.1
      - run: pip3 install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/refs/heads/master.zip
      - run: git submodule update --init --recursive --remote

  prepare_test_manager:
    steps:
      - run: ecosystem-test prepare-remote-test-manager -es aws_access_key_id=${aws_access_key_id} -es aws_secret_access_key=${aws_secret_access_key} -p $(find ~/project/workspace/build/ -name *manylinux-py311-none-linux_x86_64.wgn*) ~/project/plugin_1_5.yaml
      - run: ecosystem-test remote-upload-plugin -PN kubernetes --wagon-type manylinux
      - run: ecosystem-test remote-upload-plugin -PN helm --wagon-type manylinux
      - run: ecosystem-test remote-upload-plugin -PN aws --wagon-type manylinux
      - run: ecosystem-test remote-upload-plugin -PN utilities --wagon-type manylinux

  run_eks_helm_test:
    steps:
      - run:
          name: run_eks_helm_test
          no_output_timeout: 60m
          command: ecosystem-test remote-blueprint-test -b .circleci/blueprint.yaml --test-id=helm-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=5400

jobs:
  integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager 
      - prepare_test_manager
      - run_eks_helm_test

workflows:
  version: 2.1
  tests:
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job:
          context: 
            - plugins-inputs
          # <<: *unittest-post-steps
      - node/validate_version_job
      - node/validate_documentation_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
          requires:
            - node/check_py3_compat_job
      - integration_tests_py3:
          context: 
            - plugins-inputs
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - releaseorb/release:
          filters:
            branches:
              only: /master/
          requires:
            - node/validate_version_job
            - node/validate_documentation_job
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
            - node/unittests_job
            - integration_tests_py3
      - releaseorb/merge_docs_job:
          filters:
            branches:
              only: /master/
          requires:
            - releaseorb/release
            - node/validate_documentation_job
  nightly:
    triggers:
    - schedule:
        cron: "0 1 * * 0,1,3,5"
        filters:
          branches:
            only:
              - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job:
          context: 
            - plugins-inputs
          # <<: *unittest-post-steps
      - node/validate_version_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
          requires:
            - node/check_py3_compat_job
      - integration_tests_py3:
          context: 
            - plugins-inputs
          # <<: *job-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
